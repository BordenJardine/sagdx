(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\data\\CinderProfiles.js":[function(require,module,exports){
var CinderProfiles = function() {
};

CinderProfiles.PROFILES = [
  {
    name: 'Demo 1',
    image: 'demo.png'
  },
  {
    name: 'Demo 2',
    image: 'demo2.png'
  }
];

module.exports = CinderProfiles;

},{}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\entities\\CinderProfile.js":[function(require,module,exports){
var CinderProfile = function(game, direction) {
  Phaser.Group.call(this, game);
  this.game = game;
  this.profile = null;
  this.selectionResult = null;
  this.generateProfile(direction);
};

CinderProfile.prototype = Object.create(Phaser.Group.prototype);
CinderProfile.prototype.constructor = CinderProfile;

CinderProfile.prototype.generateProfile = function(direction) {
  // Generate or randomly pick already generated image
  // Generate or randomly pick already generated profile text
  // Generate result of R/L swipes for this profile

  window.CurrentProfileIdx += 1;
  if (window.CurrentProfileIdx === window.CinderProfiles.length)
    window.CurrentProfileIdx = 0;

  this.profile = window.CinderProfiles[window.CurrentProfileIdx];

  var width = this.game.width;
  var cinderFrameW = this.game.cache.getImage('cinderFrame').width;
  var cinderFrameH = this.game.cache.getImage('cinderFrame').height;
  var offset = (width - cinderFrameW) / 2;

  if (direction === 1)
    this.x = -width;
  else
    this.x = width * 2;

  this.image = this.create(offset, offset, this.profile.image);
  this.name = new Phaser.Text(this.game, offset, cinderFrameH + offset, this.profile.name);
  this.add(this.name);

  var tween = this.game.add.tween(this);
  tween.to({ x: 0 }, 500, Phaser.Easing.Cubic.Out, true);
  tween.start();
};

module.exports = CinderProfile;

},{}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\main.js":[function(require,module,exports){
'use strict';

var game = new Phaser.Game(414, 606, Phaser.AUTO, 'body');

window.Utils = require('./utils');

game.state.add('Boot', require('./states/boot'));
game.state.add('Splash', require('./states/splash'));
game.state.add('Preloader', require('./states/preloader'));
game.state.add('Menu', require('./states/menu'));
game.state.add('Game', require('./states/game'));

game.state.start('Boot');

},{"./states/boot":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\boot.js","./states/game":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\game.js","./states/menu":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\menu.js","./states/preloader":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\preloader.js","./states/splash":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\splash.js","./utils":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\utils.js"}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\boot.js":[function(require,module,exports){
var Boot = function () {};

module.exports = Boot;

Boot.prototype = {

  preload: function () {
    this.load.image('preloader', 'assets/preloader.gif');
  },

  create: function () {
    this.game.input.maxPointers = 1;
    this.game.stage.backgroundColor = 0xf6f6f2;

    this.game.scale.pageAlignHorizontally = true;
    this.game.scale.pageAlignVertically = true;

    if (!this.game.device.desktop) {
      this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;

      this.game.scale.minWidth =  260;
      this.game.scale.minHeight = 480;
      this.game.scale.maxWidth = 414;
      this.game.scale.maxHeight = 736;

      this.game.scale.setScreenSize(true);
    }

    this.game.scale.refresh();

    this.game.state.start('Preloader');
  }
};

},{}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\game.js":[function(require,module,exports){
var SwipeManager = require('../utilities/SwipeManager.js');
var CinderProfile = require('../entities/CinderProfile.js');

var Game = function () {
  currentCinderProfile = null;
  lastSwipeDirection = SwipeManager.SWIPE_DIRECTIONS.RIGHT;
};

Game.prototype = {
  create: function () {
    this.game.plugins.add(new SwipeManager(this.game, {}, this.onSwipe, this));
    currentCinderProfile = new CinderProfile(this.game, lastSwipeDirection);
  },

  onSwipe: function(swipeDirection) {
    var to = -this.game.width;
    lastSwipeDirection = swipeDirection;

    if (swipeDirection == SwipeManager.SWIPE_DIRECTIONS.RIGHT) {
      to = this.game.width;
    }

    var tween = this.game.add.tween(currentCinderProfile);
    tween.onComplete.add(this.onTweenComplete, this);
    tween.to({ x: to }, 700, Phaser.Easing.Cubic.Out, true);
    tween.start();
  },

  onTweenComplete: function() {
    // execute currentCinderProfile.selectionResult
    // or generate new profile:
    currentCinderProfile = new CinderProfile(this.game, lastSwipeDirection);
  },

  update: function () {
  }
};

module.exports = Game;

},{"../entities/CinderProfile.js":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\entities\\CinderProfile.js","../utilities/SwipeManager.js":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\utilities\\SwipeManager.js"}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\menu.js":[function(require,module,exports){
var Menu = function () {
};

module.exports = Menu;

Menu.prototype = {
  create: function () {
    var startText = "Press to start!";
    var textProps = { font: '24pt Arial',
                      fill: '#C24300',
                      strokeThickness: 0 };

    var cinderLogoW = this.game.cache.getImage('cinderLogo').width;
    var cinderLogoH = this.game.cache.getImage('cinderLogo').height;

    var x = (this.game.width / 2) - (cinderLogoW / 2);
    var y = (this.game.height / 3) - (cinderLogoH / 2);

    this.game.add.sprite(x, y, 'cinderLogo');
    this.game.add.text(x, y + cinderLogoH * 1.5, startText, textProps);

    this.input.onDown.add(this.onDown, this);
  },

  update: function () {
  },

  onDown: function () {
    //if (!!this.game.device.desktop) {
    if (!this.game.device.desktop) {
      this.game.scale.fullScreenScaleMode = Phaser.ScaleManager.SHOW_ALL;
      this.game.scale.startFullScreen(true);
    }

    this.game.state.start('Game');
  }
};

},{}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\preloader.js":[function(require,module,exports){
var CinderProfiles = require('../data/CinderProfiles.js');

var Preloader = function (game) {
  this.asset = null;
  this.ready = false;
};

module.exports = Preloader;

Preloader.prototype = {

  preload: function () {
    var assetRoot = 'assets/';

    this.asset = this.add.sprite(320, 240, 'preloader');

    this.load.onLoadComplete.addOnce(this.onLoadComplete, this);
    this.load.setPreloadSprite(this.asset);

    window.CurrentProfileIdx = -1;
    window.CinderProfiles = this.shuffleProfiles();

    this.load.image('cinderLogo', assetRoot + 'cinder-logo.png');
    this.load.image('cinderFrame', assetRoot + 'cinder-frame.png');

    for (var i = 0; i < window.CinderProfiles.length; i++) {
      this.load.image(window.CinderProfiles[i].image, assetRoot + window.CinderProfiles[i].image);
    }
  },

  shuffleProfiles: function() {
    var currentIdx = CinderProfiles.PROFILES.length, tmp, randomIdx;

    while (0 !== currentIdx) {
      randomIdx = Math.floor(Math.random() * currentIdx);
      currentIdx -= 1;

      tmp = CinderProfiles.PROFILES[currentIdx];
      CinderProfiles.PROFILES[currentIdx] = CinderProfiles.PROFILES[randomIdx];
      CinderProfiles.PROFILES[randomIdx] = tmp;
    }

    return CinderProfiles.PROFILES;
  },

  create: function () {
    this.asset.cropEnabled = false;
  },

  update: function () {
    if (!!this.ready) {
      this.game.state.start('Menu');
    }
  },

  onLoadComplete: function () {
    this.ready = true;
  }
};

},{"../data/CinderProfiles.js":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\data\\CinderProfiles.js"}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\splash.js":[function(require,module,exports){
var Splash = function () {
};

module.exports = Splash;

Splash.prototype = {
  create: function () {
  }
};
},{}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\utilities\\SwipeManager.js":[function(require,module,exports){
var SwipeManager = function(game, bounds, callback, receiver) {
  Phaser.Plugin.call(this, game);
  this.game = game;
  this.bounds = bounds;
  this.onCooldown = false;
  this.cooldown = 0;
  this.onSwipe = callback.bind(receiver);
  this.swipeDirection = SwipeManager.SWIPE_DIRECTIONS.LEFT;
};

SwipeManager.prototype = Object.create(Phaser.Plugin.prototype);
SwipeManager.prototype.constructor = SwipeManager;

SwipeManager.prototype.update = function() {
  // TODO: Ensure majority of swipe falls within this.bounds (?)
  var start = this.game.input.activePointer.positionDown;
  var end = this.game.input.activePointer.position;

  var distance = Phaser.Point.distance(start, end);
  var duration = this.game.input.activePointer.duration;

  if (duration > 0 && !this.onCooldown) {
    if (distance > SwipeManager.SWIPE_DIST && duration < SwipeManager.SWIPE_TIME) {
      swipeDirection = end.x > start.x ? SwipeManager.SWIPE_DIRECTIONS.RIGHT :
        SwipeManager.SWIPE_DIRECTIONS.LEFT;
      this.onSwipe(swipeDirection);
      this.onCooldown = true;
    }
  }

  if (this.onCooldown) {
    this.cooldown += 1;

    if (this.cooldown >= SwipeManager.SWIPE_COOLDOWN) {
      this.cooldown = 0;
      this.onCooldown = false;
    }
  }
};

SwipeManager.SWIPE_TIME = 250;
SwipeManager.SWIPE_DIST = 100;
SwipeManager.SWIPE_COOLDOWN = 25;
SwipeManager.SWIPE_DIRECTIONS = {
  LEFT: 0,
  RIGHT: 1
};

module.exports = SwipeManager;

},{}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\utils.js":[function(require,module,exports){
var Utils = {
  containsObject: function(obj, list) {
    var i;
    for (i = 0; i < list.length; i++) {
      if (list[i] === obj) {
        return true;
      }
    }

    return false;
  }
};

module.exports = Utils;

},{}]},{},["C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\main.js"])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,

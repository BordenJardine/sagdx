(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/jroblak/projects/sagdx/src/js/main.js":[function(require,module,exports){
'use strict';

var game = new Phaser.Game(414, 736, Phaser.AUTO, 'sagdx-game');

window.Utils = require('./utils');
window.playerState = {
  currentLevel: 'Game'
};

game.state.add('Boot', require('./states/boot'));
game.state.add('Splash', require('./states/splash'));
game.state.add('Preloader', require('./states/preloader'));
game.state.add('Menu', require('./states/menu'));
game.state.add('Game', require('./states/game'));

game.state.start('Boot');

},{"./states/boot":"/Users/jroblak/projects/sagdx/src/js/states/boot.js","./states/game":"/Users/jroblak/projects/sagdx/src/js/states/game.js","./states/menu":"/Users/jroblak/projects/sagdx/src/js/states/menu.js","./states/preloader":"/Users/jroblak/projects/sagdx/src/js/states/preloader.js","./states/splash":"/Users/jroblak/projects/sagdx/src/js/states/splash.js","./utils":"/Users/jroblak/projects/sagdx/src/js/utils.js"}],"/Users/jroblak/projects/sagdx/src/js/states/boot.js":[function(require,module,exports){
var Boot = function () {};

module.exports = Boot;

Boot.prototype = {

  preload: function () {
    this.load.image('preloader', 'assets/preloader.gif');
  },

  create: function () {
    this.game.input.maxPointers = 1;
    this.game.stage.backgroundColor = 0xf6f6f2;


    if (this.game.device.desktop) {
      this.game.stage.scale.pageAlignHorizontally = true;
    } else {
      this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
      this.game.scale.minWidth =  480;
      this.game.scale.minHeight = 260;
      this.game.scale.maxWidth = 414;
      this.game.scale.maxHeight = 736;
      this.game.scale.forceLandscape = true;
      this.game.scale.pageAlignHorizontally = true;
      this.game.scale.setScreenSize(true);
    }

    this.game.state.start('Preloader');
  }
};

},{}],"/Users/jroblak/projects/sagdx/src/js/states/game.js":[function(require,module,exports){
var SwipeManager = require('../utilities/SwipeManager.js');

var Game = function () {
};

module.exports = Game;

Game.prototype = {
  create: function () {
    var x = (this.game.width / 2) - 100;
    var y = (this.game.height / 2);

    this.game.plugins.add(new SwipeManager(this.game, {}, this.onSwipe));
  },

  onSwipe: function(swipeDirection) {
    console.log('swipe ' + swipeDirection + ' detected!');
  },

  update: function () {
  }
};

},{"../utilities/SwipeManager.js":"/Users/jroblak/projects/sagdx/src/js/utilities/SwipeManager.js"}],"/Users/jroblak/projects/sagdx/src/js/states/menu.js":[function(require,module,exports){
var Menu = function () {
};

module.exports = Menu;

Menu.prototype = {
  create: function () {
    var startText = "Press to start!";
    var textProps = { font: '24pt Arial',
                      fill: '#C24300',
                      strokeThickness: 0 };

    var cinderLogoW = this.game.cache.getImage('cinderLogo').width;
    var cinderLogoH = this.game.cache.getImage('cinderLogo').height;

    var x = (this.game.width / 2) - (cinderLogoW / 2);
    var y = (this.game.height / 3) - (cinderLogoH / 2);

    this.game.add.sprite(x, y, 'cinderLogo');
    this.game.add.text(x, y + cinderLogoH * 1.5, startText, textProps);

    this.input.onDown.add(this.onDown, this);
  },

  update: function () {
  },

  onDown: function () {
    this.game.state.start(playerState.currentLevel);
  }
};

},{}],"/Users/jroblak/projects/sagdx/src/js/states/preloader.js":[function(require,module,exports){
var Preloader = function (game) {
  this.asset = null;
  this.ready = false;
};

module.exports = Preloader;

Preloader.prototype = {

  preload: function () {
    this.asset = this.add.sprite(320, 240, 'preloader');
    this.asset.anchor.setTo(0.5, 0.5);

    this.load.onLoadComplete.addOnce(this.onLoadComplete, this);
    this.load.setPreloadSprite(this.asset);
    this.load.image('testsprite', 'assets/test.png');
    this.load.image('cinderLogo', 'assets/cinder-logo.png');
  },

  create: function () {
    this.asset.cropEnabled = false;
  },

  update: function () {
    if (!!this.ready) {
      this.game.state.start('Menu');
    }
  },

  onLoadComplete: function () {
    this.ready = true;
  }
};

},{}],"/Users/jroblak/projects/sagdx/src/js/states/splash.js":[function(require,module,exports){
var Splash = function () {
};

module.exports = Splash;

Splash.prototype = {
  create: function () {
  }
};
},{}],"/Users/jroblak/projects/sagdx/src/js/utilities/SwipeManager.js":[function(require,module,exports){
var SwipeManager = function(game, bounds, callback) {
  Phaser.Plugin.call(this, game);
  this.game = game;
  this.bounds = bounds;
  this.onCooldown = false;
  this.cooldown = 0;
  this.onSwipe = callback;
  this.swipeDirection = SwipeManager.SWIPE_DIRECTIONS.LEFT;
};

SwipeManager.prototype = Object.create(Phaser.Plugin.prototype);
SwipeManager.prototype.constructor = SwipeManager;

SwipeManager.prototype.update = function() {
  // TODO: Ensure majority of swipe falls within this.bounds (?)
  var start = this.game.input.activePointer.positionDown;
  var end = this.game.input.activePointer.position;

  var distance = Phaser.Point.distance(start, end);
  var duration = this.game.input.activePointer.duration;

  if (duration > 0 && !this.onCooldown) {
    if (distance > SwipeManager.SWIPE_DIST && duration < SwipeManager.SWIPE_TIME) {
      swipeDirection = end.x > start.x ? SwipeManager.SWIPE_DIRECTIONS.RIGHT :
        SwipeManager.SWIPE_DIRECTIONS.LEFT;
      this.onSwipe(swipeDirection);
      this.onCooldown = true;
    }
  }

  if (this.onCooldown) {
    this.cooldown += 1;

    if (this.cooldown >= SwipeManager.SWIPE_COOLDOWN) {
      this.cooldown = 0;
      this.onCooldown = false;
    }
  }
};

SwipeManager.SWIPE_TIME = 250;
SwipeManager.SWIPE_DIST = 100;
SwipeManager.SWIPE_COOLDOWN = 25;
SwipeManager.SWIPE_DIRECTIONS = {
  LEFT: 0,
  RIGHT: 1
};

module.exports = SwipeManager;

},{}],"/Users/jroblak/projects/sagdx/src/js/utils.js":[function(require,module,exports){
var Utils = {
  containsObject: function(obj, list) {
    var i;
    for (i = 0; i < list.length; i++) {
      if (list[i] === obj) {
        return true;
      }
    }

    return false;
  }
};

module.exports = Utils;

},{}]},{},["/Users/jroblak/projects/sagdx/src/js/main.js"])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,

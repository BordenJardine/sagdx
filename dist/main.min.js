(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\entities\\CinderProfile.js":[function(require,module,exports){
var CinderProfile = function(game) {
  Phaser.Group.call(this, game);
  this.game = game;
  this.image = null;
  this.name = null;
  this.aboutText = null;
  this.selectionResult = null;
  this.generateProfile();
};

CinderProfile.prototype = Object.create(Phaser.Group.prototype);
CinderProfile.prototype.constructor = CinderProfile;

CinderProfile.prototype.generateProfile = function() {
  // Generate or randomly pick already generated image
  // Generate or randomly pick already generated profile text
  // Generate result of R/L swipes for this profile

  var width = this.game.width;
  var cinderFrameW = this.game.cache.getImage('cinderFrame').width;
  var cinderFrameH = this.game.cache.getImage('cinderFrame').height;
  var offset = (width - cinderFrameW) / 2;

  this.image = this.create(offset, offset, 'cinderFrame');
  this.name = new Phaser.Text(this.game, offset, cinderFrameH + offset, "Ron");
  this.aboutText = new Phaser.Text(this.game,
                                   offset,
                                   this.name.y + this.name.height,
                                   "Hi, my name is Ron!", {
                                     font: '12px Arial'
                                   });
  this.add(this.aboutText);
  this.add(this.name);
};

module.exports = CinderProfile;

},{}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\main.js":[function(require,module,exports){
'use strict';

var game = new Phaser.Game(414, 736, Phaser.AUTO, 'sagdx-game');

window.Utils = require('./utils');
window.playerState = {
  currentLevel: 'Game'
};

game.state.add('Boot', require('./states/boot'));
game.state.add('Splash', require('./states/splash'));
game.state.add('Preloader', require('./states/preloader'));
game.state.add('Menu', require('./states/menu'));
game.state.add('Game', require('./states/game'));

game.state.start('Boot');

},{"./states/boot":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\boot.js","./states/game":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\game.js","./states/menu":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\menu.js","./states/preloader":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\preloader.js","./states/splash":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\splash.js","./utils":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\utils.js"}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\boot.js":[function(require,module,exports){
var Boot = function () {};

module.exports = Boot;

Boot.prototype = {

  preload: function () {
    this.load.image('preloader', 'assets/preloader.gif');
  },

  create: function () {
    this.game.input.maxPointers = 1;
    this.game.stage.backgroundColor = 0xf6f6f2;


    if (this.game.device.desktop) {
      this.game.stage.scale.pageAlignHorizontally = true;
    } else {
      this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
      this.game.scale.minWidth =  480;
      this.game.scale.minHeight = 260;
      this.game.scale.maxWidth = 414;
      this.game.scale.maxHeight = 736;
      this.game.scale.forceLandscape = true;
      this.game.scale.pageAlignHorizontally = true;
      this.game.scale.setScreenSize(true);
    }

    this.game.state.start('Preloader');
  }
};

},{}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\game.js":[function(require,module,exports){
var SwipeManager = require('../utilities/SwipeManager.js');
var CinderProfile = require('../entities/CinderProfile.js');

var Game = function () {
  currentCinderProfile = null
};

Game.prototype = {
  create: function () {
    var x = (this.game.width / 2) - 100;
    var y = (this.game.height / 2);

    this.game.plugins.add(new SwipeManager(this.game, {}, this.onSwipe));

    currentCinderProfile = new CinderProfile(this.game);
  },

  onSwipe: function(swipeDirection) {
    var to = -1000;
    if (swipeDirection == SwipeManager.SWIPE_DIRECTIONS.RIGHT)
      to = 1000;

    console.log(this.onTweenComplete);
    var tween = this.game.add.tween(currentCinderProfile.x)
    tween.onComplete.add(this.onTweenComplete, this);
    tween.to({ x: to }, 100, Phaser.Easing.Quadratic.InOut, true);
    tween.start();
  },

  onTweenComplete: function() {
    alert('here!');
  },

  update: function () {
  }
};

module.exports = Game;

},{"../entities/CinderProfile.js":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\entities\\CinderProfile.js","../utilities/SwipeManager.js":"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\utilities\\SwipeManager.js"}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\menu.js":[function(require,module,exports){
var Menu = function () {
};

module.exports = Menu;

Menu.prototype = {
  create: function () {
    var startText = "Press to start!";
    var textProps = { font: '24pt Arial',
                      fill: '#C24300',
                      strokeThickness: 0 };

    var cinderLogoW = this.game.cache.getImage('cinderLogo').width;
    var cinderLogoH = this.game.cache.getImage('cinderLogo').height;

    var x = (this.game.width / 2) - (cinderLogoW / 2);
    var y = (this.game.height / 3) - (cinderLogoH / 2);

    this.game.add.sprite(x, y, 'cinderLogo');
    this.game.add.text(x, y + cinderLogoH * 1.5, startText, textProps);

    this.input.onDown.add(this.onDown, this);
  },

  update: function () {
  },

  onDown: function () {
    this.game.state.start(playerState.currentLevel);
  }
};

},{}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\preloader.js":[function(require,module,exports){
var Preloader = function (game) {
  this.asset = null;
  this.ready = false;
};

module.exports = Preloader;

Preloader.prototype = {

  preload: function () {
    this.asset = this.add.sprite(320, 240, 'preloader');
    this.asset.anchor.setTo(0.5, 0.5);

    this.load.onLoadComplete.addOnce(this.onLoadComplete, this);
    this.load.setPreloadSprite(this.asset);
    this.load.image('cinderLogo', 'assets/cinder-logo.png');
    this.load.image('cinderFrame', 'assets/cinder-frame.png');
  },

  create: function () {
    this.asset.cropEnabled = false;
  },

  update: function () {
    if (!!this.ready) {
      this.game.state.start('Menu');
    }
  },

  onLoadComplete: function () {
    this.ready = true;
  }
};

},{}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\states\\splash.js":[function(require,module,exports){
var Splash = function () {
};

module.exports = Splash;

Splash.prototype = {
  create: function () {
  }
};
},{}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\utilities\\SwipeManager.js":[function(require,module,exports){
var SwipeManager = function(game, bounds, callback) {
  Phaser.Plugin.call(this, game);
  this.game = game;
  this.bounds = bounds;
  this.onCooldown = false;
  this.cooldown = 0;
  this.onSwipe = callback;
  this.swipeDirection = SwipeManager.SWIPE_DIRECTIONS.LEFT;
};

SwipeManager.prototype = Object.create(Phaser.Plugin.prototype);
SwipeManager.prototype.constructor = SwipeManager;

SwipeManager.prototype.update = function() {
  // TODO: Ensure majority of swipe falls within this.bounds (?)
  var start = this.game.input.activePointer.positionDown;
  var end = this.game.input.activePointer.position;

  var distance = Phaser.Point.distance(start, end);
  var duration = this.game.input.activePointer.duration;

  if (duration > 0 && !this.onCooldown) {
    if (distance > SwipeManager.SWIPE_DIST && duration < SwipeManager.SWIPE_TIME) {
      swipeDirection = end.x > start.x ? SwipeManager.SWIPE_DIRECTIONS.RIGHT :
        SwipeManager.SWIPE_DIRECTIONS.LEFT;
      this.onSwipe(swipeDirection);
      this.onCooldown = true;
    }
  }

  if (this.onCooldown) {
    this.cooldown += 1;

    if (this.cooldown >= SwipeManager.SWIPE_COOLDOWN) {
      this.cooldown = 0;
      this.onCooldown = false;
    }
  }
};

SwipeManager.SWIPE_TIME = 250;
SwipeManager.SWIPE_DIST = 100;
SwipeManager.SWIPE_COOLDOWN = 25;
SwipeManager.SWIPE_DIRECTIONS = {
  LEFT: 0,
  RIGHT: 1
};

module.exports = SwipeManager;

},{}],"C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\utils.js":[function(require,module,exports){
var Utils = {
  containsObject: function(obj, list) {
    var i;
    for (i = 0; i < list.length; i++) {
      if (list[i] === obj) {
        return true;
      }
    }

    return false;
  }
};

module.exports = Utils;

},{}]},{},["C:\\Users\\Admin\\Documents\\Projects\\sagdx\\src\\js\\main.js"])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,

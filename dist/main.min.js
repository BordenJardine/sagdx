(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/jroblak/projects/sagdx/src/js/entities/CinderProfile.js":[function(require,module,exports){
var CinderProfile = function(game, direction) {
  Phaser.Group.call(this, game);
  this.game = game;
  this.image = null;
  this.name = null;
  this.aboutText = null;
  this.selectionResult = null;
  this.generateProfile(direction);
};

CinderProfile.prototype = Object.create(Phaser.Group.prototype);
CinderProfile.prototype.constructor = CinderProfile;

CinderProfile.prototype.generateProfile = function(direction) {
  // Generate or randomly pick already generated image
  // Generate or randomly pick already generated profile text
  // Generate result of R/L swipes for this profile

  var width = this.game.width;
  var cinderFrameW = this.game.cache.getImage('cinderFrame').width;
  var cinderFrameH = this.game.cache.getImage('cinderFrame').height;
  var offset = (width - cinderFrameW) / 2;

  if (direction === 1)
    this.x = -width;
  else
    this.x = width * 2;

  this.image = this.create(offset, offset, 'cinderFrame');
  this.name = new Phaser.Text(this.game, offset, cinderFrameH + offset, "Ron");
  this.aboutText = new Phaser.Text(this.game,
                                   offset,
                                   this.name.y + this.name.height,
                                   "Hi, my name is Ron!", {
                                     font: '12px Arial'
                                   });
  this.add(this.aboutText);
  this.add(this.name);

  var tween = this.game.add.tween(this);
  tween.to({ x: 0 }, 500, Phaser.Easing.Cubic.Out, true);
  tween.start();
};

module.exports = CinderProfile;

},{}],"/Users/jroblak/projects/sagdx/src/js/main.js":[function(require,module,exports){
'use strict';

var game = new Phaser.Game(414, 606, Phaser.AUTO, 'sagdx-game');

window.Utils = require('./utils');
window.playerState = {
  currentLevel: 'Game'
};

game.state.add('Boot', require('./states/boot'));
game.state.add('Splash', require('./states/splash'));
game.state.add('Preloader', require('./states/preloader'));
game.state.add('Menu', require('./states/menu'));
game.state.add('Game', require('./states/game'));

game.state.start('Boot');

},{"./states/boot":"/Users/jroblak/projects/sagdx/src/js/states/boot.js","./states/game":"/Users/jroblak/projects/sagdx/src/js/states/game.js","./states/menu":"/Users/jroblak/projects/sagdx/src/js/states/menu.js","./states/preloader":"/Users/jroblak/projects/sagdx/src/js/states/preloader.js","./states/splash":"/Users/jroblak/projects/sagdx/src/js/states/splash.js","./utils":"/Users/jroblak/projects/sagdx/src/js/utils.js"}],"/Users/jroblak/projects/sagdx/src/js/states/boot.js":[function(require,module,exports){
var Boot = function () {};

module.exports = Boot;

Boot.prototype = {

  preload: function () {
    this.load.image('preloader', 'assets/preloader.gif');
  },

  create: function () {
    this.game.input.maxPointers = 1;
    this.game.stage.backgroundColor = 0xf6f6f2;


    if (this.game.device.desktop) {
      this.game.stage.scale.pageAlignHorizontally = true;
    } else {
      this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
      this.game.scale.minWidth =  480;
      this.game.scale.minHeight = 260;
      this.game.scale.maxWidth = 414;
      this.game.scale.maxHeight = 736;
      this.game.scale.forceLandscape = true;
      this.game.scale.pageAlignHorizontally = true;
      this.game.scale.setScreenSize(true);
    }

    this.game.state.start('Preloader');
  }
};

},{}],"/Users/jroblak/projects/sagdx/src/js/states/game.js":[function(require,module,exports){
var SwipeManager = require('../utilities/SwipeManager.js');
var CinderProfile = require('../entities/CinderProfile.js');

var Game = function () {
  currentCinderProfile = null;
  lastSwipeDirection = SwipeManager.SWIPE_DIRECTIONS.RIGHT;
};

Game.prototype = {
  create: function () {
    var x = (this.game.width / 2) - 100;
    var y = (this.game.height / 2);

    this.game.plugins.add(new SwipeManager(this.game, {}, this.onSwipe, this));

    currentCinderProfile = new CinderProfile(this.game, lastSwipeDirection);
  },

  onSwipe: function(swipeDirection) {
    var to = -this.game.width;
    lastSwipeDirection = swipeDirection;

    if (swipeDirection == SwipeManager.SWIPE_DIRECTIONS.RIGHT) {
      to = this.game.width;
    }

    var tween = this.game.add.tween(currentCinderProfile);
    tween.onComplete.add(this.onTweenComplete, this);
    tween.to({ x: to }, 700, Phaser.Easing.Cubic.Out, true);
    tween.start();
  },

  onTweenComplete: function() {
    // execute currentCinderProfile.selectionResult
    // or generate new profile:
    currentCinderProfile = new CinderProfile(this.game, lastSwipeDirection);
  },

  update: function () {
  }
};

module.exports = Game;

},{"../entities/CinderProfile.js":"/Users/jroblak/projects/sagdx/src/js/entities/CinderProfile.js","../utilities/SwipeManager.js":"/Users/jroblak/projects/sagdx/src/js/utilities/SwipeManager.js"}],"/Users/jroblak/projects/sagdx/src/js/states/menu.js":[function(require,module,exports){
var Menu = function () {
};

module.exports = Menu;

Menu.prototype = {
  create: function () {
    var startText = "Press to start!";
    var textProps = { font: '24pt Arial',
                      fill: '#C24300',
                      strokeThickness: 0 };

    var cinderLogoW = this.game.cache.getImage('cinderLogo').width;
    var cinderLogoH = this.game.cache.getImage('cinderLogo').height;

    var x = (this.game.width / 2) - (cinderLogoW / 2);
    var y = (this.game.height / 3) - (cinderLogoH / 2);

    this.game.add.sprite(x, y, 'cinderLogo');
    this.game.add.text(x, y + cinderLogoH * 1.5, startText, textProps);

    this.input.onDown.add(this.onDown, this);
  },

  update: function () {
  },

  onDown: function () {
    this.game.state.start(playerState.currentLevel);
  }
};

},{}],"/Users/jroblak/projects/sagdx/src/js/states/preloader.js":[function(require,module,exports){
var Preloader = function (game) {
  this.asset = null;
  this.ready = false;
};

module.exports = Preloader;

Preloader.prototype = {

  preload: function () {
    this.asset = this.add.sprite(320, 240, 'preloader');
    this.asset.anchor.setTo(0.5, 0.5);

    this.load.onLoadComplete.addOnce(this.onLoadComplete, this);
    this.load.setPreloadSprite(this.asset);
    this.load.image('cinderLogo', 'assets/cinder-logo.png');
    this.load.image('cinderFrame', 'assets/cinder-frame.png');
  },

  create: function () {
    this.asset.cropEnabled = false;
  },

  update: function () {
    if (!!this.ready) {
      this.game.state.start('Menu');
    }
  },

  onLoadComplete: function () {
    this.ready = true;
  }
};

},{}],"/Users/jroblak/projects/sagdx/src/js/states/splash.js":[function(require,module,exports){
var Splash = function () {
};

module.exports = Splash;

Splash.prototype = {
  create: function () {
  }
};
},{}],"/Users/jroblak/projects/sagdx/src/js/utilities/SwipeManager.js":[function(require,module,exports){
var SwipeManager = function(game, bounds, callback, receiver) {
  Phaser.Plugin.call(this, game);
  this.game = game;
  this.bounds = bounds;
  this.onCooldown = false;
  this.cooldown = 0;
  this.onSwipe = callback.bind(receiver);
  this.swipeDirection = SwipeManager.SWIPE_DIRECTIONS.LEFT;
};

SwipeManager.prototype = Object.create(Phaser.Plugin.prototype);
SwipeManager.prototype.constructor = SwipeManager;

SwipeManager.prototype.update = function() {
  // TODO: Ensure majority of swipe falls within this.bounds (?)
  var start = this.game.input.activePointer.positionDown;
  var end = this.game.input.activePointer.position;

  var distance = Phaser.Point.distance(start, end);
  var duration = this.game.input.activePointer.duration;

  if (duration > 0 && !this.onCooldown) {
    if (distance > SwipeManager.SWIPE_DIST && duration < SwipeManager.SWIPE_TIME) {
      swipeDirection = end.x > start.x ? SwipeManager.SWIPE_DIRECTIONS.RIGHT :
        SwipeManager.SWIPE_DIRECTIONS.LEFT;
      this.onSwipe(swipeDirection);
      this.onCooldown = true;
    }
  }

  if (this.onCooldown) {
    this.cooldown += 1;

    if (this.cooldown >= SwipeManager.SWIPE_COOLDOWN) {
      this.cooldown = 0;
      this.onCooldown = false;
    }
  }
};

SwipeManager.SWIPE_TIME = 250;
SwipeManager.SWIPE_DIST = 100;
SwipeManager.SWIPE_COOLDOWN = 25;
SwipeManager.SWIPE_DIRECTIONS = {
  LEFT: 0,
  RIGHT: 1
};

module.exports = SwipeManager;

},{}],"/Users/jroblak/projects/sagdx/src/js/utils.js":[function(require,module,exports){
var Utils = {
  containsObject: function(obj, list) {
    var i;
    for (i = 0; i < list.length; i++) {
      if (list[i] === obj) {
        return true;
      }
    }

    return false;
  }
};

module.exports = Utils;

},{}]},{},["/Users/jroblak/projects/sagdx/src/js/main.js"])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvZW50aXRpZXMvQ2luZGVyUHJvZmlsZS5qcyIsInNyYy9qcy9tYWluLmpzIiwic3JjL2pzL3N0YXRlcy9ib290LmpzIiwic3JjL2pzL3N0YXRlcy9nYW1lLmpzIiwic3JjL2pzL3N0YXRlcy9tZW51LmpzIiwic3JjL2pzL3N0YXRlcy9wcmVsb2FkZXIuanMiLCJzcmMvanMvc3RhdGVzL3NwbGFzaC5qcyIsInNyYy9qcy91dGlsaXRpZXMvU3dpcGVNYW5hZ2VyLmpzIiwic3JjL2pzL3V0aWxzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDN0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDL0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDM0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDL0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2pDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNqREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsInZhciBDaW5kZXJQcm9maWxlID0gZnVuY3Rpb24oZ2FtZSwgZGlyZWN0aW9uKSB7XG4gIFBoYXNlci5Hcm91cC5jYWxsKHRoaXMsIGdhbWUpO1xuICB0aGlzLmdhbWUgPSBnYW1lO1xuICB0aGlzLmltYWdlID0gbnVsbDtcbiAgdGhpcy5uYW1lID0gbnVsbDtcbiAgdGhpcy5hYm91dFRleHQgPSBudWxsO1xuICB0aGlzLnNlbGVjdGlvblJlc3VsdCA9IG51bGw7XG4gIHRoaXMuZ2VuZXJhdGVQcm9maWxlKGRpcmVjdGlvbik7XG59O1xuXG5DaW5kZXJQcm9maWxlLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoUGhhc2VyLkdyb3VwLnByb3RvdHlwZSk7XG5DaW5kZXJQcm9maWxlLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IENpbmRlclByb2ZpbGU7XG5cbkNpbmRlclByb2ZpbGUucHJvdG90eXBlLmdlbmVyYXRlUHJvZmlsZSA9IGZ1bmN0aW9uKGRpcmVjdGlvbikge1xuICAvLyBHZW5lcmF0ZSBvciByYW5kb21seSBwaWNrIGFscmVhZHkgZ2VuZXJhdGVkIGltYWdlXG4gIC8vIEdlbmVyYXRlIG9yIHJhbmRvbWx5IHBpY2sgYWxyZWFkeSBnZW5lcmF0ZWQgcHJvZmlsZSB0ZXh0XG4gIC8vIEdlbmVyYXRlIHJlc3VsdCBvZiBSL0wgc3dpcGVzIGZvciB0aGlzIHByb2ZpbGVcblxuICB2YXIgd2lkdGggPSB0aGlzLmdhbWUud2lkdGg7XG4gIHZhciBjaW5kZXJGcmFtZVcgPSB0aGlzLmdhbWUuY2FjaGUuZ2V0SW1hZ2UoJ2NpbmRlckZyYW1lJykud2lkdGg7XG4gIHZhciBjaW5kZXJGcmFtZUggPSB0aGlzLmdhbWUuY2FjaGUuZ2V0SW1hZ2UoJ2NpbmRlckZyYW1lJykuaGVpZ2h0O1xuICB2YXIgb2Zmc2V0ID0gKHdpZHRoIC0gY2luZGVyRnJhbWVXKSAvIDI7XG5cbiAgaWYgKGRpcmVjdGlvbiA9PT0gMSlcbiAgICB0aGlzLnggPSAtd2lkdGg7XG4gIGVsc2VcbiAgICB0aGlzLnggPSB3aWR0aCAqIDI7XG5cbiAgdGhpcy5pbWFnZSA9IHRoaXMuY3JlYXRlKG9mZnNldCwgb2Zmc2V0LCAnY2luZGVyRnJhbWUnKTtcbiAgdGhpcy5uYW1lID0gbmV3IFBoYXNlci5UZXh0KHRoaXMuZ2FtZSwgb2Zmc2V0LCBjaW5kZXJGcmFtZUggKyBvZmZzZXQsIFwiUm9uXCIpO1xuICB0aGlzLmFib3V0VGV4dCA9IG5ldyBQaGFzZXIuVGV4dCh0aGlzLmdhbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5uYW1lLnkgKyB0aGlzLm5hbWUuaGVpZ2h0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIkhpLCBteSBuYW1lIGlzIFJvbiFcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQ6ICcxMnB4IEFyaWFsJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgdGhpcy5hZGQodGhpcy5hYm91dFRleHQpO1xuICB0aGlzLmFkZCh0aGlzLm5hbWUpO1xuXG4gIHZhciB0d2VlbiA9IHRoaXMuZ2FtZS5hZGQudHdlZW4odGhpcyk7XG4gIHR3ZWVuLnRvKHsgeDogMCB9LCA1MDAsIFBoYXNlci5FYXNpbmcuQ3ViaWMuT3V0LCB0cnVlKTtcbiAgdHdlZW4uc3RhcnQoKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQ2luZGVyUHJvZmlsZTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGdhbWUgPSBuZXcgUGhhc2VyLkdhbWUoNDE0LCA2MDYsIFBoYXNlci5BVVRPLCAnc2FnZHgtZ2FtZScpO1xuXG53aW5kb3cuVXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG53aW5kb3cucGxheWVyU3RhdGUgPSB7XG4gIGN1cnJlbnRMZXZlbDogJ0dhbWUnXG59O1xuXG5nYW1lLnN0YXRlLmFkZCgnQm9vdCcsIHJlcXVpcmUoJy4vc3RhdGVzL2Jvb3QnKSk7XG5nYW1lLnN0YXRlLmFkZCgnU3BsYXNoJywgcmVxdWlyZSgnLi9zdGF0ZXMvc3BsYXNoJykpO1xuZ2FtZS5zdGF0ZS5hZGQoJ1ByZWxvYWRlcicsIHJlcXVpcmUoJy4vc3RhdGVzL3ByZWxvYWRlcicpKTtcbmdhbWUuc3RhdGUuYWRkKCdNZW51JywgcmVxdWlyZSgnLi9zdGF0ZXMvbWVudScpKTtcbmdhbWUuc3RhdGUuYWRkKCdHYW1lJywgcmVxdWlyZSgnLi9zdGF0ZXMvZ2FtZScpKTtcblxuZ2FtZS5zdGF0ZS5zdGFydCgnQm9vdCcpO1xuIiwidmFyIEJvb3QgPSBmdW5jdGlvbiAoKSB7fTtcblxubW9kdWxlLmV4cG9ydHMgPSBCb290O1xuXG5Cb290LnByb3RvdHlwZSA9IHtcblxuICBwcmVsb2FkOiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5sb2FkLmltYWdlKCdwcmVsb2FkZXInLCAnYXNzZXRzL3ByZWxvYWRlci5naWYnKTtcbiAgfSxcblxuICBjcmVhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmdhbWUuaW5wdXQubWF4UG9pbnRlcnMgPSAxO1xuICAgIHRoaXMuZ2FtZS5zdGFnZS5iYWNrZ3JvdW5kQ29sb3IgPSAweGY2ZjZmMjtcblxuXG4gICAgaWYgKHRoaXMuZ2FtZS5kZXZpY2UuZGVza3RvcCkge1xuICAgICAgdGhpcy5nYW1lLnN0YWdlLnNjYWxlLnBhZ2VBbGlnbkhvcml6b250YWxseSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZ2FtZS5zY2FsZS5zY2FsZU1vZGUgPSBQaGFzZXIuU2NhbGVNYW5hZ2VyLlNIT1dfQUxMO1xuICAgICAgdGhpcy5nYW1lLnNjYWxlLm1pbldpZHRoID0gIDQ4MDtcbiAgICAgIHRoaXMuZ2FtZS5zY2FsZS5taW5IZWlnaHQgPSAyNjA7XG4gICAgICB0aGlzLmdhbWUuc2NhbGUubWF4V2lkdGggPSA0MTQ7XG4gICAgICB0aGlzLmdhbWUuc2NhbGUubWF4SGVpZ2h0ID0gNzM2O1xuICAgICAgdGhpcy5nYW1lLnNjYWxlLmZvcmNlTGFuZHNjYXBlID0gdHJ1ZTtcbiAgICAgIHRoaXMuZ2FtZS5zY2FsZS5wYWdlQWxpZ25Ib3Jpem9udGFsbHkgPSB0cnVlO1xuICAgICAgdGhpcy5nYW1lLnNjYWxlLnNldFNjcmVlblNpemUodHJ1ZSk7XG4gICAgfVxuXG4gICAgdGhpcy5nYW1lLnN0YXRlLnN0YXJ0KCdQcmVsb2FkZXInKTtcbiAgfVxufTtcbiIsInZhciBTd2lwZU1hbmFnZXIgPSByZXF1aXJlKCcuLi91dGlsaXRpZXMvU3dpcGVNYW5hZ2VyLmpzJyk7XG52YXIgQ2luZGVyUHJvZmlsZSA9IHJlcXVpcmUoJy4uL2VudGl0aWVzL0NpbmRlclByb2ZpbGUuanMnKTtcblxudmFyIEdhbWUgPSBmdW5jdGlvbiAoKSB7XG4gIGN1cnJlbnRDaW5kZXJQcm9maWxlID0gbnVsbDtcbiAgbGFzdFN3aXBlRGlyZWN0aW9uID0gU3dpcGVNYW5hZ2VyLlNXSVBFX0RJUkVDVElPTlMuUklHSFQ7XG59O1xuXG5HYW1lLnByb3RvdHlwZSA9IHtcbiAgY3JlYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHggPSAodGhpcy5nYW1lLndpZHRoIC8gMikgLSAxMDA7XG4gICAgdmFyIHkgPSAodGhpcy5nYW1lLmhlaWdodCAvIDIpO1xuXG4gICAgdGhpcy5nYW1lLnBsdWdpbnMuYWRkKG5ldyBTd2lwZU1hbmFnZXIodGhpcy5nYW1lLCB7fSwgdGhpcy5vblN3aXBlLCB0aGlzKSk7XG5cbiAgICBjdXJyZW50Q2luZGVyUHJvZmlsZSA9IG5ldyBDaW5kZXJQcm9maWxlKHRoaXMuZ2FtZSwgbGFzdFN3aXBlRGlyZWN0aW9uKTtcbiAgfSxcblxuICBvblN3aXBlOiBmdW5jdGlvbihzd2lwZURpcmVjdGlvbikge1xuICAgIHZhciB0byA9IC10aGlzLmdhbWUud2lkdGg7XG4gICAgbGFzdFN3aXBlRGlyZWN0aW9uID0gc3dpcGVEaXJlY3Rpb247XG5cbiAgICBpZiAoc3dpcGVEaXJlY3Rpb24gPT0gU3dpcGVNYW5hZ2VyLlNXSVBFX0RJUkVDVElPTlMuUklHSFQpIHtcbiAgICAgIHRvID0gdGhpcy5nYW1lLndpZHRoO1xuICAgIH1cblxuICAgIHZhciB0d2VlbiA9IHRoaXMuZ2FtZS5hZGQudHdlZW4oY3VycmVudENpbmRlclByb2ZpbGUpO1xuICAgIHR3ZWVuLm9uQ29tcGxldGUuYWRkKHRoaXMub25Ud2VlbkNvbXBsZXRlLCB0aGlzKTtcbiAgICB0d2Vlbi50byh7IHg6IHRvIH0sIDcwMCwgUGhhc2VyLkVhc2luZy5DdWJpYy5PdXQsIHRydWUpO1xuICAgIHR3ZWVuLnN0YXJ0KCk7XG4gIH0sXG5cbiAgb25Ud2VlbkNvbXBsZXRlOiBmdW5jdGlvbigpIHtcbiAgICAvLyBleGVjdXRlIGN1cnJlbnRDaW5kZXJQcm9maWxlLnNlbGVjdGlvblJlc3VsdFxuICAgIC8vIG9yIGdlbmVyYXRlIG5ldyBwcm9maWxlOlxuICAgIGN1cnJlbnRDaW5kZXJQcm9maWxlID0gbmV3IENpbmRlclByb2ZpbGUodGhpcy5nYW1lLCBsYXN0U3dpcGVEaXJlY3Rpb24pO1xuICB9LFxuXG4gIHVwZGF0ZTogZnVuY3Rpb24gKCkge1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEdhbWU7XG4iLCJ2YXIgTWVudSA9IGZ1bmN0aW9uICgpIHtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gTWVudTtcblxuTWVudS5wcm90b3R5cGUgPSB7XG4gIGNyZWF0ZTogZnVuY3Rpb24gKCkge1xuICAgIHZhciBzdGFydFRleHQgPSBcIlByZXNzIHRvIHN0YXJ0IVwiO1xuICAgIHZhciB0ZXh0UHJvcHMgPSB7IGZvbnQ6ICcyNHB0IEFyaWFsJyxcbiAgICAgICAgICAgICAgICAgICAgICBmaWxsOiAnI0MyNDMwMCcsXG4gICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlVGhpY2tuZXNzOiAwIH07XG5cbiAgICB2YXIgY2luZGVyTG9nb1cgPSB0aGlzLmdhbWUuY2FjaGUuZ2V0SW1hZ2UoJ2NpbmRlckxvZ28nKS53aWR0aDtcbiAgICB2YXIgY2luZGVyTG9nb0ggPSB0aGlzLmdhbWUuY2FjaGUuZ2V0SW1hZ2UoJ2NpbmRlckxvZ28nKS5oZWlnaHQ7XG5cbiAgICB2YXIgeCA9ICh0aGlzLmdhbWUud2lkdGggLyAyKSAtIChjaW5kZXJMb2dvVyAvIDIpO1xuICAgIHZhciB5ID0gKHRoaXMuZ2FtZS5oZWlnaHQgLyAzKSAtIChjaW5kZXJMb2dvSCAvIDIpO1xuXG4gICAgdGhpcy5nYW1lLmFkZC5zcHJpdGUoeCwgeSwgJ2NpbmRlckxvZ28nKTtcbiAgICB0aGlzLmdhbWUuYWRkLnRleHQoeCwgeSArIGNpbmRlckxvZ29IICogMS41LCBzdGFydFRleHQsIHRleHRQcm9wcyk7XG5cbiAgICB0aGlzLmlucHV0Lm9uRG93bi5hZGQodGhpcy5vbkRvd24sIHRoaXMpO1xuICB9LFxuXG4gIHVwZGF0ZTogZnVuY3Rpb24gKCkge1xuICB9LFxuXG4gIG9uRG93bjogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZ2FtZS5zdGF0ZS5zdGFydChwbGF5ZXJTdGF0ZS5jdXJyZW50TGV2ZWwpO1xuICB9XG59O1xuIiwidmFyIFByZWxvYWRlciA9IGZ1bmN0aW9uIChnYW1lKSB7XG4gIHRoaXMuYXNzZXQgPSBudWxsO1xuICB0aGlzLnJlYWR5ID0gZmFsc2U7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFByZWxvYWRlcjtcblxuUHJlbG9hZGVyLnByb3RvdHlwZSA9IHtcblxuICBwcmVsb2FkOiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5hc3NldCA9IHRoaXMuYWRkLnNwcml0ZSgzMjAsIDI0MCwgJ3ByZWxvYWRlcicpO1xuICAgIHRoaXMuYXNzZXQuYW5jaG9yLnNldFRvKDAuNSwgMC41KTtcblxuICAgIHRoaXMubG9hZC5vbkxvYWRDb21wbGV0ZS5hZGRPbmNlKHRoaXMub25Mb2FkQ29tcGxldGUsIHRoaXMpO1xuICAgIHRoaXMubG9hZC5zZXRQcmVsb2FkU3ByaXRlKHRoaXMuYXNzZXQpO1xuICAgIHRoaXMubG9hZC5pbWFnZSgnY2luZGVyTG9nbycsICdhc3NldHMvY2luZGVyLWxvZ28ucG5nJyk7XG4gICAgdGhpcy5sb2FkLmltYWdlKCdjaW5kZXJGcmFtZScsICdhc3NldHMvY2luZGVyLWZyYW1lLnBuZycpO1xuICB9LFxuXG4gIGNyZWF0ZTogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuYXNzZXQuY3JvcEVuYWJsZWQgPSBmYWxzZTtcbiAgfSxcblxuICB1cGRhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoISF0aGlzLnJlYWR5KSB7XG4gICAgICB0aGlzLmdhbWUuc3RhdGUuc3RhcnQoJ01lbnUnKTtcbiAgICB9XG4gIH0sXG5cbiAgb25Mb2FkQ29tcGxldGU6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLnJlYWR5ID0gdHJ1ZTtcbiAgfVxufTtcbiIsInZhciBTcGxhc2ggPSBmdW5jdGlvbiAoKSB7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNwbGFzaDtcblxuU3BsYXNoLnByb3RvdHlwZSA9IHtcbiAgY3JlYXRlOiBmdW5jdGlvbiAoKSB7XG4gIH1cbn07IiwidmFyIFN3aXBlTWFuYWdlciA9IGZ1bmN0aW9uKGdhbWUsIGJvdW5kcywgY2FsbGJhY2ssIHJlY2VpdmVyKSB7XG4gIFBoYXNlci5QbHVnaW4uY2FsbCh0aGlzLCBnYW1lKTtcbiAgdGhpcy5nYW1lID0gZ2FtZTtcbiAgdGhpcy5ib3VuZHMgPSBib3VuZHM7XG4gIHRoaXMub25Db29sZG93biA9IGZhbHNlO1xuICB0aGlzLmNvb2xkb3duID0gMDtcbiAgdGhpcy5vblN3aXBlID0gY2FsbGJhY2suYmluZChyZWNlaXZlcik7XG4gIHRoaXMuc3dpcGVEaXJlY3Rpb24gPSBTd2lwZU1hbmFnZXIuU1dJUEVfRElSRUNUSU9OUy5MRUZUO1xufTtcblxuU3dpcGVNYW5hZ2VyLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoUGhhc2VyLlBsdWdpbi5wcm90b3R5cGUpO1xuU3dpcGVNYW5hZ2VyLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFN3aXBlTWFuYWdlcjtcblxuU3dpcGVNYW5hZ2VyLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbigpIHtcbiAgLy8gVE9ETzogRW5zdXJlIG1ham9yaXR5IG9mIHN3aXBlIGZhbGxzIHdpdGhpbiB0aGlzLmJvdW5kcyAoPylcbiAgdmFyIHN0YXJ0ID0gdGhpcy5nYW1lLmlucHV0LmFjdGl2ZVBvaW50ZXIucG9zaXRpb25Eb3duO1xuICB2YXIgZW5kID0gdGhpcy5nYW1lLmlucHV0LmFjdGl2ZVBvaW50ZXIucG9zaXRpb247XG5cbiAgdmFyIGRpc3RhbmNlID0gUGhhc2VyLlBvaW50LmRpc3RhbmNlKHN0YXJ0LCBlbmQpO1xuICB2YXIgZHVyYXRpb24gPSB0aGlzLmdhbWUuaW5wdXQuYWN0aXZlUG9pbnRlci5kdXJhdGlvbjtcblxuICBpZiAoZHVyYXRpb24gPiAwICYmICF0aGlzLm9uQ29vbGRvd24pIHtcbiAgICBpZiAoZGlzdGFuY2UgPiBTd2lwZU1hbmFnZXIuU1dJUEVfRElTVCAmJiBkdXJhdGlvbiA8IFN3aXBlTWFuYWdlci5TV0lQRV9USU1FKSB7XG4gICAgICBzd2lwZURpcmVjdGlvbiA9IGVuZC54ID4gc3RhcnQueCA/IFN3aXBlTWFuYWdlci5TV0lQRV9ESVJFQ1RJT05TLlJJR0hUIDpcbiAgICAgICAgU3dpcGVNYW5hZ2VyLlNXSVBFX0RJUkVDVElPTlMuTEVGVDtcbiAgICAgIHRoaXMub25Td2lwZShzd2lwZURpcmVjdGlvbik7XG4gICAgICB0aGlzLm9uQ29vbGRvd24gPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGlmICh0aGlzLm9uQ29vbGRvd24pIHtcbiAgICB0aGlzLmNvb2xkb3duICs9IDE7XG5cbiAgICBpZiAodGhpcy5jb29sZG93biA+PSBTd2lwZU1hbmFnZXIuU1dJUEVfQ09PTERPV04pIHtcbiAgICAgIHRoaXMuY29vbGRvd24gPSAwO1xuICAgICAgdGhpcy5vbkNvb2xkb3duID0gZmFsc2U7XG4gICAgfVxuICB9XG59O1xuXG5Td2lwZU1hbmFnZXIuU1dJUEVfVElNRSA9IDI1MDtcblN3aXBlTWFuYWdlci5TV0lQRV9ESVNUID0gMTAwO1xuU3dpcGVNYW5hZ2VyLlNXSVBFX0NPT0xET1dOID0gMjU7XG5Td2lwZU1hbmFnZXIuU1dJUEVfRElSRUNUSU9OUyA9IHtcbiAgTEVGVDogMCxcbiAgUklHSFQ6IDFcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gU3dpcGVNYW5hZ2VyO1xuIiwidmFyIFV0aWxzID0ge1xuICBjb250YWluc09iamVjdDogZnVuY3Rpb24ob2JqLCBsaXN0KSB7XG4gICAgdmFyIGk7XG4gICAgZm9yIChpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChsaXN0W2ldID09PSBvYmopIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFV0aWxzO1xuIl19

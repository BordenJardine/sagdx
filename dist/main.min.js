(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/jroblak/projects/sagdx/src/js/entities/CinderProfile.js":[function(require,module,exports){
var CinderProfile = function(game, direction) {
  Phaser.Group.call(this, game);
  this.game = game;
  this.image = null;
  this.name = null;
  this.aboutText = null;
  this.selectionResult = null;
  this.generateProfile(direction);
};

CinderProfile.prototype = Object.create(Phaser.Group.prototype);
CinderProfile.prototype.constructor = CinderProfile;

CinderProfile.prototype.generateProfile = function(direction) {
  // Generate or randomly pick already generated image
  // Generate or randomly pick already generated profile text
  // Generate result of R/L swipes for this profile

  var width = this.game.width;
  if (direction === 1)
    this.x = -width;
  else
    this.x = width * 2;

  var cinderFrameW = this.game.cache.getImage('cinderFrame').width;
  var cinderFrameH = this.game.cache.getImage('cinderFrame').height;
  var offset = (width - cinderFrameW) / 2;

  this.image = this.create(offset, offset, 'cinderFrame');
  this.name = new Phaser.Text(this.game, offset, cinderFrameH + offset, "Ron");
  this.aboutText = new Phaser.Text(this.game,
                                   offset,
                                   this.name.y + this.name.height,
                                   "Hi, my name is Ron!", {
                                     font: '12px Arial'
                                   });
  this.add(this.aboutText);
  this.add(this.name);

  var tween = this.game.add.tween(this);
  tween.to({ x: 0 }, 500, Phaser.Easing.Cubic.Out, true);
  tween.start();
};

module.exports = CinderProfile;

},{}],"/Users/jroblak/projects/sagdx/src/js/main.js":[function(require,module,exports){
'use strict';

var game = new Phaser.Game(414, 606, Phaser.AUTO, 'sagdx-game');

window.Utils = require('./utils');
window.playerState = {
  currentLevel: 'Game'
};

game.state.add('Boot', require('./states/boot'));
game.state.add('Splash', require('./states/splash'));
game.state.add('Preloader', require('./states/preloader'));
game.state.add('Menu', require('./states/menu'));
game.state.add('Game', require('./states/game'));

game.state.start('Boot');

},{"./states/boot":"/Users/jroblak/projects/sagdx/src/js/states/boot.js","./states/game":"/Users/jroblak/projects/sagdx/src/js/states/game.js","./states/menu":"/Users/jroblak/projects/sagdx/src/js/states/menu.js","./states/preloader":"/Users/jroblak/projects/sagdx/src/js/states/preloader.js","./states/splash":"/Users/jroblak/projects/sagdx/src/js/states/splash.js","./utils":"/Users/jroblak/projects/sagdx/src/js/utils.js"}],"/Users/jroblak/projects/sagdx/src/js/states/boot.js":[function(require,module,exports){
var Boot = function () {};

module.exports = Boot;

Boot.prototype = {

  preload: function () {
    this.load.image('preloader', 'assets/preloader.gif');
  },

  create: function () {
    this.game.input.maxPointers = 1;
    this.game.stage.backgroundColor = 0xf6f6f2;


    if (this.game.device.desktop) {
      this.game.stage.scale.pageAlignHorizontally = true;
    } else {
      this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
      this.game.scale.minWidth =  480;
      this.game.scale.minHeight = 260;
      this.game.scale.maxWidth = 414;
      this.game.scale.maxHeight = 736;
      this.game.scale.forceLandscape = true;
      this.game.scale.pageAlignHorizontally = true;
      this.game.scale.setScreenSize(true);
    }

    this.game.state.start('Preloader');
  }
};

},{}],"/Users/jroblak/projects/sagdx/src/js/states/game.js":[function(require,module,exports){
var SwipeManager = require('../utilities/SwipeManager.js');
var CinderProfile = require('../entities/CinderProfile.js');

var Game = function () {
  currentCinderProfile = null;
  lastSwipeDirection = SwipeManager.SWIPE_DIRECTIONS.RIGHT;
};

Game.prototype = {
  create: function () {
    var x = (this.game.width / 2) - 100;
    var y = (this.game.height / 2);

    this.game.plugins.add(new SwipeManager(this.game, {}, this.onSwipe, this));

    currentCinderProfile = new CinderProfile(this.game, lastSwipeDirection);
  },

  onSwipe: function(swipeDirection) {
    var to = -this.game.width;
    lastSwipeDirection = swipeDirection;

    if (swipeDirection == SwipeManager.SWIPE_DIRECTIONS.RIGHT) {
      to = this.game.width;
    }

    var tween = this.game.add.tween(currentCinderProfile);
    tween.onComplete.add(this.onTweenComplete, this, swipeDirection);
    tween.to({ x: to }, 700, Phaser.Easing.Cubic.Out, true);
    tween.start();
  },

  onTweenComplete: function() {
    currentCinderProfile = new CinderProfile(this.game, lastSwipeDirection);
  },

  update: function () {
  }
};

module.exports = Game;

},{"../entities/CinderProfile.js":"/Users/jroblak/projects/sagdx/src/js/entities/CinderProfile.js","../utilities/SwipeManager.js":"/Users/jroblak/projects/sagdx/src/js/utilities/SwipeManager.js"}],"/Users/jroblak/projects/sagdx/src/js/states/menu.js":[function(require,module,exports){
var Menu = function () {
};

module.exports = Menu;

Menu.prototype = {
  create: function () {
    var startText = "Press to start!";
    var textProps = { font: '24pt Arial',
                      fill: '#C24300',
                      strokeThickness: 0 };

    var cinderLogoW = this.game.cache.getImage('cinderLogo').width;
    var cinderLogoH = this.game.cache.getImage('cinderLogo').height;

    var x = (this.game.width / 2) - (cinderLogoW / 2);
    var y = (this.game.height / 3) - (cinderLogoH / 2);

    this.game.add.sprite(x, y, 'cinderLogo');
    this.game.add.text(x, y + cinderLogoH * 1.5, startText, textProps);

    this.input.onDown.add(this.onDown, this);
  },

  update: function () {
  },

  onDown: function () {
    this.game.state.start(playerState.currentLevel);
  }
};

},{}],"/Users/jroblak/projects/sagdx/src/js/states/preloader.js":[function(require,module,exports){
var Preloader = function (game) {
  this.asset = null;
  this.ready = false;
};

module.exports = Preloader;

Preloader.prototype = {

  preload: function () {
    this.asset = this.add.sprite(320, 240, 'preloader');
    this.asset.anchor.setTo(0.5, 0.5);

    this.load.onLoadComplete.addOnce(this.onLoadComplete, this);
    this.load.setPreloadSprite(this.asset);
    this.load.image('cinderLogo', 'assets/cinder-logo.png');
    this.load.image('cinderFrame', 'assets/cinder-frame.png');
  },

  create: function () {
    this.asset.cropEnabled = false;
  },

  update: function () {
    if (!!this.ready) {
      this.game.state.start('Menu');
    }
  },

  onLoadComplete: function () {
    this.ready = true;
  }
};

},{}],"/Users/jroblak/projects/sagdx/src/js/states/splash.js":[function(require,module,exports){
var Splash = function () {
};

module.exports = Splash;

Splash.prototype = {
  create: function () {
  }
};
},{}],"/Users/jroblak/projects/sagdx/src/js/utilities/SwipeManager.js":[function(require,module,exports){
var SwipeManager = function(game, bounds, callback, receiver) {
  Phaser.Plugin.call(this, game);
  this.game = game;
  this.bounds = bounds;
  this.onCooldown = false;
  this.cooldown = 0;
  this.onSwipe = callback.bind(receiver);
  this.swipeDirection = SwipeManager.SWIPE_DIRECTIONS.LEFT;
};

SwipeManager.prototype = Object.create(Phaser.Plugin.prototype);
SwipeManager.prototype.constructor = SwipeManager;

SwipeManager.prototype.update = function() {
  // TODO: Ensure majority of swipe falls within this.bounds (?)
  var start = this.game.input.activePointer.positionDown;
  var end = this.game.input.activePointer.position;

  var distance = Phaser.Point.distance(start, end);
  var duration = this.game.input.activePointer.duration;

  if (duration > 0 && !this.onCooldown) {
    if (distance > SwipeManager.SWIPE_DIST && duration < SwipeManager.SWIPE_TIME) {
      swipeDirection = end.x > start.x ? SwipeManager.SWIPE_DIRECTIONS.RIGHT :
        SwipeManager.SWIPE_DIRECTIONS.LEFT;
      this.onSwipe(swipeDirection);
      this.onCooldown = true;
    }
  }

  if (this.onCooldown) {
    this.cooldown += 1;

    if (this.cooldown >= SwipeManager.SWIPE_COOLDOWN) {
      this.cooldown = 0;
      this.onCooldown = false;
    }
  }
};

SwipeManager.SWIPE_TIME = 250;
SwipeManager.SWIPE_DIST = 100;
SwipeManager.SWIPE_COOLDOWN = 25;
SwipeManager.SWIPE_DIRECTIONS = {
  LEFT: 0,
  RIGHT: 1
};

module.exports = SwipeManager;

},{}],"/Users/jroblak/projects/sagdx/src/js/utils.js":[function(require,module,exports){
var Utils = {
  containsObject: function(obj, list) {
    var i;
    for (i = 0; i < list.length; i++) {
      if (list[i] === obj) {
        return true;
      }
    }

    return false;
  }
};

module.exports = Utils;

},{}]},{},["/Users/jroblak/projects/sagdx/src/js/main.js"])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvZW50aXRpZXMvQ2luZGVyUHJvZmlsZS5qcyIsInNyYy9qcy9tYWluLmpzIiwic3JjL2pzL3N0YXRlcy9ib290LmpzIiwic3JjL2pzL3N0YXRlcy9nYW1lLmpzIiwic3JjL2pzL3N0YXRlcy9tZW51LmpzIiwic3JjL2pzL3N0YXRlcy9wcmVsb2FkZXIuanMiLCJzcmMvanMvc3RhdGVzL3NwbGFzaC5qcyIsInNyYy9qcy91dGlsaXRpZXMvU3dpcGVNYW5hZ2VyLmpzIiwic3JjL2pzL3V0aWxzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDN0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDL0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN6Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMvQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDakNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNSQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2pEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwidmFyIENpbmRlclByb2ZpbGUgPSBmdW5jdGlvbihnYW1lLCBkaXJlY3Rpb24pIHtcbiAgUGhhc2VyLkdyb3VwLmNhbGwodGhpcywgZ2FtZSk7XG4gIHRoaXMuZ2FtZSA9IGdhbWU7XG4gIHRoaXMuaW1hZ2UgPSBudWxsO1xuICB0aGlzLm5hbWUgPSBudWxsO1xuICB0aGlzLmFib3V0VGV4dCA9IG51bGw7XG4gIHRoaXMuc2VsZWN0aW9uUmVzdWx0ID0gbnVsbDtcbiAgdGhpcy5nZW5lcmF0ZVByb2ZpbGUoZGlyZWN0aW9uKTtcbn07XG5cbkNpbmRlclByb2ZpbGUucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShQaGFzZXIuR3JvdXAucHJvdG90eXBlKTtcbkNpbmRlclByb2ZpbGUucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQ2luZGVyUHJvZmlsZTtcblxuQ2luZGVyUHJvZmlsZS5wcm90b3R5cGUuZ2VuZXJhdGVQcm9maWxlID0gZnVuY3Rpb24oZGlyZWN0aW9uKSB7XG4gIC8vIEdlbmVyYXRlIG9yIHJhbmRvbWx5IHBpY2sgYWxyZWFkeSBnZW5lcmF0ZWQgaW1hZ2VcbiAgLy8gR2VuZXJhdGUgb3IgcmFuZG9tbHkgcGljayBhbHJlYWR5IGdlbmVyYXRlZCBwcm9maWxlIHRleHRcbiAgLy8gR2VuZXJhdGUgcmVzdWx0IG9mIFIvTCBzd2lwZXMgZm9yIHRoaXMgcHJvZmlsZVxuXG4gIHZhciB3aWR0aCA9IHRoaXMuZ2FtZS53aWR0aDtcbiAgaWYgKGRpcmVjdGlvbiA9PT0gMSlcbiAgICB0aGlzLnggPSAtd2lkdGg7XG4gIGVsc2VcbiAgICB0aGlzLnggPSB3aWR0aCAqIDI7XG5cbiAgdmFyIGNpbmRlckZyYW1lVyA9IHRoaXMuZ2FtZS5jYWNoZS5nZXRJbWFnZSgnY2luZGVyRnJhbWUnKS53aWR0aDtcbiAgdmFyIGNpbmRlckZyYW1lSCA9IHRoaXMuZ2FtZS5jYWNoZS5nZXRJbWFnZSgnY2luZGVyRnJhbWUnKS5oZWlnaHQ7XG4gIHZhciBvZmZzZXQgPSAod2lkdGggLSBjaW5kZXJGcmFtZVcpIC8gMjtcblxuICB0aGlzLmltYWdlID0gdGhpcy5jcmVhdGUob2Zmc2V0LCBvZmZzZXQsICdjaW5kZXJGcmFtZScpO1xuICB0aGlzLm5hbWUgPSBuZXcgUGhhc2VyLlRleHQodGhpcy5nYW1lLCBvZmZzZXQsIGNpbmRlckZyYW1lSCArIG9mZnNldCwgXCJSb25cIik7XG4gIHRoaXMuYWJvdXRUZXh0ID0gbmV3IFBoYXNlci5UZXh0KHRoaXMuZ2FtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hbWUueSArIHRoaXMubmFtZS5oZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiSGksIG15IG5hbWUgaXMgUm9uIVwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udDogJzEycHggQXJpYWwnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICB0aGlzLmFkZCh0aGlzLmFib3V0VGV4dCk7XG4gIHRoaXMuYWRkKHRoaXMubmFtZSk7XG5cbiAgdmFyIHR3ZWVuID0gdGhpcy5nYW1lLmFkZC50d2Vlbih0aGlzKTtcbiAgdHdlZW4udG8oeyB4OiAwIH0sIDUwMCwgUGhhc2VyLkVhc2luZy5DdWJpYy5PdXQsIHRydWUpO1xuICB0d2Vlbi5zdGFydCgpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBDaW5kZXJQcm9maWxlO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgZ2FtZSA9IG5ldyBQaGFzZXIuR2FtZSg0MTQsIDYwNiwgUGhhc2VyLkFVVE8sICdzYWdkeC1nYW1lJyk7XG5cbndpbmRvdy5VdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbndpbmRvdy5wbGF5ZXJTdGF0ZSA9IHtcbiAgY3VycmVudExldmVsOiAnR2FtZSdcbn07XG5cbmdhbWUuc3RhdGUuYWRkKCdCb290JywgcmVxdWlyZSgnLi9zdGF0ZXMvYm9vdCcpKTtcbmdhbWUuc3RhdGUuYWRkKCdTcGxhc2gnLCByZXF1aXJlKCcuL3N0YXRlcy9zcGxhc2gnKSk7XG5nYW1lLnN0YXRlLmFkZCgnUHJlbG9hZGVyJywgcmVxdWlyZSgnLi9zdGF0ZXMvcHJlbG9hZGVyJykpO1xuZ2FtZS5zdGF0ZS5hZGQoJ01lbnUnLCByZXF1aXJlKCcuL3N0YXRlcy9tZW51JykpO1xuZ2FtZS5zdGF0ZS5hZGQoJ0dhbWUnLCByZXF1aXJlKCcuL3N0YXRlcy9nYW1lJykpO1xuXG5nYW1lLnN0YXRlLnN0YXJ0KCdCb290Jyk7XG4iLCJ2YXIgQm9vdCA9IGZ1bmN0aW9uICgpIHt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEJvb3Q7XG5cbkJvb3QucHJvdG90eXBlID0ge1xuXG4gIHByZWxvYWQ6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmxvYWQuaW1hZ2UoJ3ByZWxvYWRlcicsICdhc3NldHMvcHJlbG9hZGVyLmdpZicpO1xuICB9LFxuXG4gIGNyZWF0ZTogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZ2FtZS5pbnB1dC5tYXhQb2ludGVycyA9IDE7XG4gICAgdGhpcy5nYW1lLnN0YWdlLmJhY2tncm91bmRDb2xvciA9IDB4ZjZmNmYyO1xuXG5cbiAgICBpZiAodGhpcy5nYW1lLmRldmljZS5kZXNrdG9wKSB7XG4gICAgICB0aGlzLmdhbWUuc3RhZ2Uuc2NhbGUucGFnZUFsaWduSG9yaXpvbnRhbGx5ID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5nYW1lLnNjYWxlLnNjYWxlTW9kZSA9IFBoYXNlci5TY2FsZU1hbmFnZXIuU0hPV19BTEw7XG4gICAgICB0aGlzLmdhbWUuc2NhbGUubWluV2lkdGggPSAgNDgwO1xuICAgICAgdGhpcy5nYW1lLnNjYWxlLm1pbkhlaWdodCA9IDI2MDtcbiAgICAgIHRoaXMuZ2FtZS5zY2FsZS5tYXhXaWR0aCA9IDQxNDtcbiAgICAgIHRoaXMuZ2FtZS5zY2FsZS5tYXhIZWlnaHQgPSA3MzY7XG4gICAgICB0aGlzLmdhbWUuc2NhbGUuZm9yY2VMYW5kc2NhcGUgPSB0cnVlO1xuICAgICAgdGhpcy5nYW1lLnNjYWxlLnBhZ2VBbGlnbkhvcml6b250YWxseSA9IHRydWU7XG4gICAgICB0aGlzLmdhbWUuc2NhbGUuc2V0U2NyZWVuU2l6ZSh0cnVlKTtcbiAgICB9XG5cbiAgICB0aGlzLmdhbWUuc3RhdGUuc3RhcnQoJ1ByZWxvYWRlcicpO1xuICB9XG59O1xuIiwidmFyIFN3aXBlTWFuYWdlciA9IHJlcXVpcmUoJy4uL3V0aWxpdGllcy9Td2lwZU1hbmFnZXIuanMnKTtcbnZhciBDaW5kZXJQcm9maWxlID0gcmVxdWlyZSgnLi4vZW50aXRpZXMvQ2luZGVyUHJvZmlsZS5qcycpO1xuXG52YXIgR2FtZSA9IGZ1bmN0aW9uICgpIHtcbiAgY3VycmVudENpbmRlclByb2ZpbGUgPSBudWxsO1xuICBsYXN0U3dpcGVEaXJlY3Rpb24gPSBTd2lwZU1hbmFnZXIuU1dJUEVfRElSRUNUSU9OUy5SSUdIVDtcbn07XG5cbkdhbWUucHJvdG90eXBlID0ge1xuICBjcmVhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgeCA9ICh0aGlzLmdhbWUud2lkdGggLyAyKSAtIDEwMDtcbiAgICB2YXIgeSA9ICh0aGlzLmdhbWUuaGVpZ2h0IC8gMik7XG5cbiAgICB0aGlzLmdhbWUucGx1Z2lucy5hZGQobmV3IFN3aXBlTWFuYWdlcih0aGlzLmdhbWUsIHt9LCB0aGlzLm9uU3dpcGUsIHRoaXMpKTtcblxuICAgIGN1cnJlbnRDaW5kZXJQcm9maWxlID0gbmV3IENpbmRlclByb2ZpbGUodGhpcy5nYW1lLCBsYXN0U3dpcGVEaXJlY3Rpb24pO1xuICB9LFxuXG4gIG9uU3dpcGU6IGZ1bmN0aW9uKHN3aXBlRGlyZWN0aW9uKSB7XG4gICAgdmFyIHRvID0gLXRoaXMuZ2FtZS53aWR0aDtcbiAgICBsYXN0U3dpcGVEaXJlY3Rpb24gPSBzd2lwZURpcmVjdGlvbjtcblxuICAgIGlmIChzd2lwZURpcmVjdGlvbiA9PSBTd2lwZU1hbmFnZXIuU1dJUEVfRElSRUNUSU9OUy5SSUdIVCkge1xuICAgICAgdG8gPSB0aGlzLmdhbWUud2lkdGg7XG4gICAgfVxuXG4gICAgdmFyIHR3ZWVuID0gdGhpcy5nYW1lLmFkZC50d2VlbihjdXJyZW50Q2luZGVyUHJvZmlsZSk7XG4gICAgdHdlZW4ub25Db21wbGV0ZS5hZGQodGhpcy5vblR3ZWVuQ29tcGxldGUsIHRoaXMsIHN3aXBlRGlyZWN0aW9uKTtcbiAgICB0d2Vlbi50byh7IHg6IHRvIH0sIDcwMCwgUGhhc2VyLkVhc2luZy5DdWJpYy5PdXQsIHRydWUpO1xuICAgIHR3ZWVuLnN0YXJ0KCk7XG4gIH0sXG5cbiAgb25Ud2VlbkNvbXBsZXRlOiBmdW5jdGlvbigpIHtcbiAgICBjdXJyZW50Q2luZGVyUHJvZmlsZSA9IG5ldyBDaW5kZXJQcm9maWxlKHRoaXMuZ2FtZSwgbGFzdFN3aXBlRGlyZWN0aW9uKTtcbiAgfSxcblxuICB1cGRhdGU6IGZ1bmN0aW9uICgpIHtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBHYW1lO1xuIiwidmFyIE1lbnUgPSBmdW5jdGlvbiAoKSB7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1lbnU7XG5cbk1lbnUucHJvdG90eXBlID0ge1xuICBjcmVhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc3RhcnRUZXh0ID0gXCJQcmVzcyB0byBzdGFydCFcIjtcbiAgICB2YXIgdGV4dFByb3BzID0geyBmb250OiAnMjRwdCBBcmlhbCcsXG4gICAgICAgICAgICAgICAgICAgICAgZmlsbDogJyNDMjQzMDAnLFxuICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZVRoaWNrbmVzczogMCB9O1xuXG4gICAgdmFyIGNpbmRlckxvZ29XID0gdGhpcy5nYW1lLmNhY2hlLmdldEltYWdlKCdjaW5kZXJMb2dvJykud2lkdGg7XG4gICAgdmFyIGNpbmRlckxvZ29IID0gdGhpcy5nYW1lLmNhY2hlLmdldEltYWdlKCdjaW5kZXJMb2dvJykuaGVpZ2h0O1xuXG4gICAgdmFyIHggPSAodGhpcy5nYW1lLndpZHRoIC8gMikgLSAoY2luZGVyTG9nb1cgLyAyKTtcbiAgICB2YXIgeSA9ICh0aGlzLmdhbWUuaGVpZ2h0IC8gMykgLSAoY2luZGVyTG9nb0ggLyAyKTtcblxuICAgIHRoaXMuZ2FtZS5hZGQuc3ByaXRlKHgsIHksICdjaW5kZXJMb2dvJyk7XG4gICAgdGhpcy5nYW1lLmFkZC50ZXh0KHgsIHkgKyBjaW5kZXJMb2dvSCAqIDEuNSwgc3RhcnRUZXh0LCB0ZXh0UHJvcHMpO1xuXG4gICAgdGhpcy5pbnB1dC5vbkRvd24uYWRkKHRoaXMub25Eb3duLCB0aGlzKTtcbiAgfSxcblxuICB1cGRhdGU6IGZ1bmN0aW9uICgpIHtcbiAgfSxcblxuICBvbkRvd246IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmdhbWUuc3RhdGUuc3RhcnQocGxheWVyU3RhdGUuY3VycmVudExldmVsKTtcbiAgfVxufTtcbiIsInZhciBQcmVsb2FkZXIgPSBmdW5jdGlvbiAoZ2FtZSkge1xuICB0aGlzLmFzc2V0ID0gbnVsbDtcbiAgdGhpcy5yZWFkeSA9IGZhbHNlO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBQcmVsb2FkZXI7XG5cblByZWxvYWRlci5wcm90b3R5cGUgPSB7XG5cbiAgcHJlbG9hZDogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuYXNzZXQgPSB0aGlzLmFkZC5zcHJpdGUoMzIwLCAyNDAsICdwcmVsb2FkZXInKTtcbiAgICB0aGlzLmFzc2V0LmFuY2hvci5zZXRUbygwLjUsIDAuNSk7XG5cbiAgICB0aGlzLmxvYWQub25Mb2FkQ29tcGxldGUuYWRkT25jZSh0aGlzLm9uTG9hZENvbXBsZXRlLCB0aGlzKTtcbiAgICB0aGlzLmxvYWQuc2V0UHJlbG9hZFNwcml0ZSh0aGlzLmFzc2V0KTtcbiAgICB0aGlzLmxvYWQuaW1hZ2UoJ2NpbmRlckxvZ28nLCAnYXNzZXRzL2NpbmRlci1sb2dvLnBuZycpO1xuICAgIHRoaXMubG9hZC5pbWFnZSgnY2luZGVyRnJhbWUnLCAnYXNzZXRzL2NpbmRlci1mcmFtZS5wbmcnKTtcbiAgfSxcblxuICBjcmVhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmFzc2V0LmNyb3BFbmFibGVkID0gZmFsc2U7XG4gIH0sXG5cbiAgdXBkYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCEhdGhpcy5yZWFkeSkge1xuICAgICAgdGhpcy5nYW1lLnN0YXRlLnN0YXJ0KCdNZW51Jyk7XG4gICAgfVxuICB9LFxuXG4gIG9uTG9hZENvbXBsZXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5yZWFkeSA9IHRydWU7XG4gIH1cbn07XG4iLCJ2YXIgU3BsYXNoID0gZnVuY3Rpb24gKCkge1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBTcGxhc2g7XG5cblNwbGFzaC5wcm90b3R5cGUgPSB7XG4gIGNyZWF0ZTogZnVuY3Rpb24gKCkge1xuICB9XG59OyIsInZhciBTd2lwZU1hbmFnZXIgPSBmdW5jdGlvbihnYW1lLCBib3VuZHMsIGNhbGxiYWNrLCByZWNlaXZlcikge1xuICBQaGFzZXIuUGx1Z2luLmNhbGwodGhpcywgZ2FtZSk7XG4gIHRoaXMuZ2FtZSA9IGdhbWU7XG4gIHRoaXMuYm91bmRzID0gYm91bmRzO1xuICB0aGlzLm9uQ29vbGRvd24gPSBmYWxzZTtcbiAgdGhpcy5jb29sZG93biA9IDA7XG4gIHRoaXMub25Td2lwZSA9IGNhbGxiYWNrLmJpbmQocmVjZWl2ZXIpO1xuICB0aGlzLnN3aXBlRGlyZWN0aW9uID0gU3dpcGVNYW5hZ2VyLlNXSVBFX0RJUkVDVElPTlMuTEVGVDtcbn07XG5cblN3aXBlTWFuYWdlci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFBoYXNlci5QbHVnaW4ucHJvdG90eXBlKTtcblN3aXBlTWFuYWdlci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBTd2lwZU1hbmFnZXI7XG5cblN3aXBlTWFuYWdlci5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24oKSB7XG4gIC8vIFRPRE86IEVuc3VyZSBtYWpvcml0eSBvZiBzd2lwZSBmYWxscyB3aXRoaW4gdGhpcy5ib3VuZHMgKD8pXG4gIHZhciBzdGFydCA9IHRoaXMuZ2FtZS5pbnB1dC5hY3RpdmVQb2ludGVyLnBvc2l0aW9uRG93bjtcbiAgdmFyIGVuZCA9IHRoaXMuZ2FtZS5pbnB1dC5hY3RpdmVQb2ludGVyLnBvc2l0aW9uO1xuXG4gIHZhciBkaXN0YW5jZSA9IFBoYXNlci5Qb2ludC5kaXN0YW5jZShzdGFydCwgZW5kKTtcbiAgdmFyIGR1cmF0aW9uID0gdGhpcy5nYW1lLmlucHV0LmFjdGl2ZVBvaW50ZXIuZHVyYXRpb247XG5cbiAgaWYgKGR1cmF0aW9uID4gMCAmJiAhdGhpcy5vbkNvb2xkb3duKSB7XG4gICAgaWYgKGRpc3RhbmNlID4gU3dpcGVNYW5hZ2VyLlNXSVBFX0RJU1QgJiYgZHVyYXRpb24gPCBTd2lwZU1hbmFnZXIuU1dJUEVfVElNRSkge1xuICAgICAgc3dpcGVEaXJlY3Rpb24gPSBlbmQueCA+IHN0YXJ0LnggPyBTd2lwZU1hbmFnZXIuU1dJUEVfRElSRUNUSU9OUy5SSUdIVCA6XG4gICAgICAgIFN3aXBlTWFuYWdlci5TV0lQRV9ESVJFQ1RJT05TLkxFRlQ7XG4gICAgICB0aGlzLm9uU3dpcGUoc3dpcGVEaXJlY3Rpb24pO1xuICAgICAgdGhpcy5vbkNvb2xkb3duID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBpZiAodGhpcy5vbkNvb2xkb3duKSB7XG4gICAgdGhpcy5jb29sZG93biArPSAxO1xuXG4gICAgaWYgKHRoaXMuY29vbGRvd24gPj0gU3dpcGVNYW5hZ2VyLlNXSVBFX0NPT0xET1dOKSB7XG4gICAgICB0aGlzLmNvb2xkb3duID0gMDtcbiAgICAgIHRoaXMub25Db29sZG93biA9IGZhbHNlO1xuICAgIH1cbiAgfVxufTtcblxuU3dpcGVNYW5hZ2VyLlNXSVBFX1RJTUUgPSAyNTA7XG5Td2lwZU1hbmFnZXIuU1dJUEVfRElTVCA9IDEwMDtcblN3aXBlTWFuYWdlci5TV0lQRV9DT09MRE9XTiA9IDI1O1xuU3dpcGVNYW5hZ2VyLlNXSVBFX0RJUkVDVElPTlMgPSB7XG4gIExFRlQ6IDAsXG4gIFJJR0hUOiAxXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN3aXBlTWFuYWdlcjtcbiIsInZhciBVdGlscyA9IHtcbiAgY29udGFpbnNPYmplY3Q6IGZ1bmN0aW9uKG9iaiwgbGlzdCkge1xuICAgIHZhciBpO1xuICAgIGZvciAoaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAobGlzdFtpXSA9PT0gb2JqKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBVdGlscztcbiJdfQ==
